#version 430
layout(local_size_x = 16, local_size_y = 16) in;


struct MeshVertex{
    float posX, posY, posZ, posW;
    float normX, normY, normZ, normW;
    float texX, texY;
};

layout (std430, binding = 1) buffer TerrainVertexBuffer
{
    MeshVertex vertices[];
};
ivec2 meshSize = ivec2(200, 200);
float amplitude = 30;
layout(binding = 0) uniform sampler2D noiseTexture;

void main()
{
    uint localID = (gl_GlobalInvocationID.x*meshSize.x-6 + gl_GlobalInvocationID.y)*6;
    ivec2 resolution = textureSize(noiseTexture, 0);

    vec2 pos0 = vec2(vertices[localID+0].posX, vertices[localID+0].posZ);
    vec2 pos1 = vec2(vertices[localID+1].posX, vertices[localID+1].posZ);
    vec2 pos2 = vec2(vertices[localID+2].posX, vertices[localID+2].posZ);
    vec2 pos3 = vec2(vertices[localID+3].posX, vertices[localID+3].posZ);
    vec2 pos4 = vec2(vertices[localID+4].posX, vertices[localID+4].posZ);
    vec2 pos5 = vec2(vertices[localID+5].posX, vertices[localID+5].posZ);


    float y0 = texture(noiseTexture, (pos0)/resolution).r*amplitude-amplitude/2;
    float y1 = texture(noiseTexture, (pos1)/resolution).r*amplitude-amplitude/2;
    float y2 = texture(noiseTexture, (pos2)/resolution).r*amplitude-amplitude/2;
    float y3 = texture(noiseTexture, (pos3)/resolution).r*amplitude-amplitude/2;
    float y4 = texture(noiseTexture, (pos4)/resolution).r*amplitude-amplitude/2;
    float y5 = texture(noiseTexture, (pos5)/resolution).r*amplitude-amplitude/2;

    vertices[localID+0].posY = y0;
    vertices[localID+1].posY = y1;
    vertices[localID+2].posY = y2;
    vertices[localID+3].posY = y3;
    vertices[localID+4].posY = y4;
    vertices[localID+5].posY = y5;

    vec3 normal1 = normalize(cross(vec3(pos1.x, y1, pos1.y) - vec3(pos0.x, y0, pos0.y), vec3(pos2.x, y2, pos2.y) - vec3(pos0.x, y0, pos0.y)));
    vec3 normal2 = normalize(-cross(vec3(pos4.x, y4, pos4.y) - vec3(pos3.x, y3, pos3.y), vec3(pos4.x, y4, pos4.y) - vec3(pos5.x, y5, pos5.y)));

    vertices[localID+0].normX = normal1.x; vertices[localID+0].normY = normal1.y; vertices[localID+0].normZ = normal1.z;
    vertices[localID+1].normX = normal1.x; vertices[localID+1].normY = normal1.y; vertices[localID+1].normZ = normal1.z;
    vertices[localID+2].normX = normal1.x; vertices[localID+2].normY = normal1.y; vertices[localID+2].normZ = normal1.z;

    vertices[localID+3].normX = normal2.x; vertices[localID+3].normY = normal2.y; vertices[localID+3].normZ = normal2.z;
    vertices[localID+4].normX = normal2.x; vertices[localID+4].normY = normal2.y; vertices[localID+4].normZ = normal2.z;
    vertices[localID+5].normX = normal2.x; vertices[localID+5].normY = normal2.y; vertices[localID+5].normZ = normal2.z;
}