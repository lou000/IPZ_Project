#version 430 core

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

layout(binding = 0) uniform sampler2D depthMap;
uniform mat4 u_View;
uniform mat4 u_Projection;
uniform vec2 u_mouseUV;

layout (std430, binding = 0) writeonly buffer mousePosition
{
    float mX, mY, mZ;
};

vec3 reconstructPosition(vec2 uv, float z, mat4 invVP)
{
    vec4 position_s = vec4(uv * 2.0 - vec2(1.0), 2.0 * z - 1.0, 1.0);
    vec4 position_v = invVP * position_s;
    return position_v.xyz / position_v.w;
}

void main()
{
    float depth = texture(depthMap, u_mouseUV, 0).r;
    vec3 worldPos = reconstructPosition(u_mouseUV, depth, inverse(u_Projection * u_View));
    mX = worldPos.x;
    mY = worldPos.y;
    mZ = worldPos.z;
}
